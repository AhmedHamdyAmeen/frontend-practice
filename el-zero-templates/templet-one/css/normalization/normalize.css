/*! normalize.css v8.0.1 | MIT License | github.com/necolas/normalize.css */

/*

### **What is `normalize.css`?**

`normalize.css` is a small CSS file created to make browsers render all elements more consistently and in line with modern standards. It "normalizes" the differences in default styling provided by different browsers, ensuring a more uniform appearance across various platforms.

---

### **Key Features of `normalize.css`**
1. **Cross-Browser Consistency**:
   - It provides consistent styles for HTML elements, such as headings, forms, buttons, tables, and more.

2. **Preservation of Useful Defaults**:
   - Unlike CSS resets, `normalize.css` doesn't remove all styles but preserves useful browser defaults (e.g., link underline, bold text for headings).

3. **Fixes for Browser Bugs**:
   - It addresses quirks and bugs in older browsers (e.g., margin issues in certain browsers).

4. **Improves Accessibility**:
   - Enhances usability and accessibility by adding better default styles for certain elements (e.g., making `<abbr>` tags look better).

5. **Foundation for Custom Styles**:
   - Acts as a good starting point for your custom CSS, reducing the need to write extra boilerplate styles.

---

### **Why and When Should You Use `normalize.css`?**

1. **When Building Cross-Browser Websites**:
   - If you want a consistent base across multiple browsers, `normalize.css` is a must.

2. **When Using a CSS Framework**:
   - Many CSS frameworks (e.g., Bootstrap) use `normalize.css` internally or something similar. If you aren't using a framework, adding `normalize.css` ensures a consistent base for your custom styles.

3. **When You Want to Avoid a Full CSS Reset**:
   - A CSS reset removes all browser styles, requiring you to define everything manually. `normalize.css` is more balanced and less invasive.

---

### **Benefits of `normalize.css`**
1. **Saves Time**:
   - You don't have to manually fix cross-browser issues.
2. **Better Usability**:
   - Improved styles for form elements, typography, and layout across different browsers.
3. **Customizable**:
   - You can modify it to suit your project needs.
4. **Lightweight**:
   - It’s small and won’t bloat your project.

---

### **How to Use `normalize.css`**
1. **Include via CDN**:
   Add the following `<link>` to your HTML file:
   ```html
   <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/normalize/8.0.1/normalize.min.css">
   ```

2. **Install via npm**:
   If you're using a build system, you can install it:
   ```bash
   npm install normalize.css
   ```
   Then import it in your CSS/SCSS file:
   ```scss
   @import "normalize.css";
   ```

3. **Download the File**:
   Download it directly from [normalize.css GitHub](https://github.com/necolas/normalize.css) and include it in your project.

---

### **Comparison with CSS Reset**
| Feature              | Normalize.css                     | CSS Reset                       |
|----------------------|------------------------------------|----------------------------------|
| **Default Styles**   | Preserves useful defaults         | Removes all browser styles      |
| **Size**             | Smaller and more efficient        | Can be large and intrusive      |
| **Use Case**         | Best for modern projects          | Good for custom-designed projects needing complete control |
| **Cross-Browser**    | Handles quirks in modern browsers | Focuses less on fixing quirks   |

---

### **Example: Before and After Using `normalize.css`**
#### Without `normalize.css`:
- Margins, paddings, and font sizes for `<h1>` vary across browsers.
- Form elements like `<input>` and `<button>` look different in Chrome vs. Firefox.

#### With `normalize.css`:
- These elements look consistent across browsers.

---

### **Conclusion**
- **Use `normalize.css`** if your project needs a consistent baseline without removing all default styles.
- It's a great tool for modern web development, ensuring cross-browser compatibility while preserving useful styles.

*/

/* Document
   ========================================================================== */

/**
 * 1. Correct the line height in all browsers.
 * 2. Prevent adjustments of font size after orientation changes in iOS.
 */

html {
    line-height: 1.15; /* 1 */
    -webkit-text-size-adjust: 100%; /* 2 */
}

/* Sections
   ========================================================================== */

/**
 * Remove the margin in all browsers.
 */

body {
    margin: 0;
}

/**
 * Render the `main` element consistently in IE.
 */

main {
    display: block;
}

/**
 * Correct the font size and margin on `h1` elements within `section` and
 * `article` contexts in Chrome, Firefox, and Safari.
 */

h1 {
    font-size: 2em;
    margin: 0.67em 0;
}

/* Grouping content
   ========================================================================== */

/**
 * 1. Add the correct box sizing in Firefox.
 * 2. Show the overflow in Edge and IE.
 */

hr {
    box-sizing: content-box; /* 1 */
    height: 0; /* 1 */
    overflow: visible; /* 2 */
}

/**
 * 1. Correct the inheritance and scaling of font size in all browsers.
 * 2. Correct the odd `em` font sizing in all browsers.
 */

pre {
    font-family: monospace, monospace; /* 1 */
    font-size: 1em; /* 2 */
}

/* Text-level semantics
   ========================================================================== */

/**
 * Remove the gray background on active links in IE 10.
 */

a {
    background-color: transparent;
}

/**
 * 1. Remove the bottom border in Chrome 57-
 * 2. Add the correct text decoration in Chrome, Edge, IE, Opera, and Safari.
 */

abbr[title] {
    border-bottom: none; /* 1 */
    text-decoration: underline; /* 2 */
    text-decoration: underline dotted; /* 2 */
}

/**
 * Add the correct font weight in Chrome, Edge, and Safari.
 */

b,
strong {
    font-weight: bolder;
}

/**
 * 1. Correct the inheritance and scaling of font size in all browsers.
 * 2. Correct the odd `em` font sizing in all browsers.
 */

code,
kbd,
samp {
    font-family: monospace, monospace; /* 1 */
    font-size: 1em; /* 2 */
}

/**
 * Add the correct font size in all browsers.
 */

small {
    font-size: 80%;
}

/**
 * Prevent `sub` and `sup` elements from affecting the line height in
 * all browsers.
 */

sub,
sup {
    font-size: 75%;
    line-height: 0;
    position: relative;
    vertical-align: baseline;
}

sub {
    bottom: -0.25em;
}

sup {
    top: -0.5em;
}

/* Embedded content
   ========================================================================== */

/**
 * Remove the border on images inside links in IE 10.
 */

img {
    border-style: none;
}

/* Forms
   ========================================================================== */

/**
 * 1. Change the font styles in all browsers.
 * 2. Remove the margin in Firefox and Safari.
 */

button,
input,
optgroup,
select,
textarea {
    font-family: inherit; /* 1 */
    font-size: 100%; /* 1 */
    line-height: 1.15; /* 1 */
    margin: 0; /* 2 */
}

/**
 * Show the overflow in IE.
 * 1. Show the overflow in Edge.
 */

button,
input { /* 1 */
    overflow: visible;
}

/**
 * Remove the inheritance of text transform in Edge, Firefox, and IE.
 * 1. Remove the inheritance of text transform in Firefox.
 */

button,
select { /* 1 */
    text-transform: none;
}

/**
 * Correct the inability to style clickable types in iOS and Safari.
 */

button,
[type="button"],
[type="reset"],
[type="submit"] {
    -webkit-appearance: button;
}

/**
 * Remove the inner border and padding in Firefox.
 */

button::-moz-focus-inner,
[type="button"]::-moz-focus-inner,
[type="reset"]::-moz-focus-inner,
[type="submit"]::-moz-focus-inner {
    border-style: none;
    padding: 0;
}

/**
 * Restore the focus styles unset by the previous rule.
 */

button:-moz-focusring,
[type="button"]:-moz-focusring,
[type="reset"]:-moz-focusring,
[type="submit"]:-moz-focusring {
    outline: 1px dotted ButtonText;
}

/**
 * Correct the padding in Firefox.
 */

fieldset {
    padding: 0.35em 0.75em 0.625em;
}

/**
 * 1. Correct the text wrapping in Edge and IE.
 * 2. Correct the color inheritance from `fieldset` elements in IE.
 * 3. Remove the padding so developers are not caught out when they zero out
 *    `fieldset` elements in all browsers.
 */

legend {
    box-sizing: border-box; /* 1 */
    color: inherit; /* 2 */
    display: table; /* 1 */
    max-width: 100%; /* 1 */
    padding: 0; /* 3 */
    white-space: normal; /* 1 */
}

/**
 * Add the correct vertical alignment in Chrome, Firefox, and Opera.
 */

progress {
    vertical-align: baseline;
}

/**
 * Remove the default vertical scrollbar in IE 10+.
 */

textarea {
    overflow: auto;
}

/**
 * 1. Add the correct box sizing in IE 10.
 * 2. Remove the padding in IE 10.
 */

[type="checkbox"],
[type="radio"] {
    box-sizing: border-box; /* 1 */
    padding: 0; /* 2 */
}

/**
 * Correct the cursor style of increment and decrement buttons in Chrome.
 */

[type="number"]::-webkit-inner-spin-button,
[type="number"]::-webkit-outer-spin-button {
    height: auto;
}

/**
 * 1. Correct the odd appearance in Chrome and Safari.
 * 2. Correct the outline style in Safari.
 */

[type="search"] {
    -webkit-appearance: textfield; /* 1 */
    outline-offset: -2px; /* 2 */
}

/**
 * Remove the inner padding in Chrome and Safari on macOS.
 */

[type="search"]::-webkit-search-decoration {
    -webkit-appearance: none;
}

/**
 * 1. Correct the inability to style clickable types in iOS and Safari.
 * 2. Change font properties to `inherit` in Safari.
 */

::-webkit-file-upload-button {
    -webkit-appearance: button; /* 1 */
    font: inherit; /* 2 */
}

/* Interactive
   ========================================================================== */

/*
 * Add the correct display in Edge, IE 10+, and Firefox.
 */

details {
    display: block;
}

/*
 * Add the correct display in all browsers.
 */

summary {
    display: list-item;
}

/* Misc
   ========================================================================== */

/**
 * Add the correct display in IE 10+.
 */

template {
    display: none;
}

/**
 * Add the correct display in IE 10.
 */

[hidden] {
    display: none;
}